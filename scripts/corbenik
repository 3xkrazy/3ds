#!/bin/bash
# corbenik

# Define urls
  # Nativefirm, agb, twl, and cetk
    # firm 11.0
      url_n3ds_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/00000021;
      url_o3ds_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000002/00000052;

    # firm cetk 11.0
      url_n3ds_firm_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/cetk;
      url_o3ds_firm_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/cetk;

    # agb 9.0
      url_n3ds_agb=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000202/00000000;
      url_o3ds_agb=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000202/0000000B;

    # agb cetk 9.0
      url_n3ds_agb_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000202/cetk;
      url_o3ds_agb_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000202/cetk;

    # twl 9.0
      url_n3ds_twl=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000102/00000000;
      url_o3ds_twl=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000102/00000016;

    # twl cetk 9.0
      url_n3ds_twl_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000102/cetk;
      url_n3ds_twl_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000102/00000000;

  # retroarch
    url_retroarch=http://buildbot.libretro.com/nightly/nintendo/3ds/$(date +%Y-%m-%d)_RetroArch_3dsx.7z;

  # freeshop
    url_freeshop=https://github.com/Cruel/freeShop/releases/download/1.2/freeShop-1.2.cia;

  # encTitleKeys
    url_enctitlekeys=https://3ds.titlekeys.com/downloadenc;

  # seeddb
    https://3ds.titlekeys.com/downloadenc;

# Define local dependencies
  dep_dependencies=~/Documents/3ds/dependencies;
  dep_distfiles=~/Documents/3ds/distfiles;
  dep_corbenik=$dep_dependencies/corbenik/keys;
  dep_a9lh=$dep_dependencies/a9lh/delebile;
  dep_decrypt9=$dep_dependencies/decrypt9;
  dep_cia=$dep_dependencies/cia/apps;
  dep_filer=$dep_dependencies/filer;
  dep_misc=$dep_dependencies/misc;
  dep_locale=$dep_dependencies/corbenik/locale;
  dep_retroarch=$dep_dependencies/retroarch;
  dep_roms=$dep_dependencies/roms;

# Define build directories
  dir_src=~/Documents/src;
  dir_build=$dir_src/build;
  dir_out=$dir_src/out;
  dir_cia=$dir_out/cia;
  dir_3ds=$dir_out/3ds;
  dir_corbenik=$dir_out/corbenik;
  dir_chain=$dir_corbenik/chain;
  dir_locale=$dir_corbenik/locale;
  dir_decrypt9=$dir_out/Decrypt9;
  dir_d9game=$dir_out/D9Game;
  dir_emunand9=$dir_out/EmuNAND9;

# Print menu
  echo "";
  echo "*********** Menu ***********";
  echo "[1] Update source files";
  echo "[2] Build corbenik and tools";
  echo "Optional:";
  echo "[3] Set corbenik to n3ds";
  echo "[4] Set corbenik to o3ds";
  echo -n "Your Choice: ";
  read choice;

case $choice in
  1)
    # Update source files
      echo "";
      mkdir -p $dep_distfiles; rm -rf $dep_distfiles; mkdir -p $dep_distfiles;
      cd $dep_distfiles;
      echo "";

      # Fetch github files
        echo "Fetching Homebrew...";
        git clone --recursive https://github.com/chaoskagami/corbenik.git;
        git clone --recursive https://github.com/delebile/arm9loaderhax.git;
        git clone --recursive https://github.com/d0k3/Decrypt9WIP.git;
        git clone --recursive https://github.com/d0k3/EmuNAND9.git;
        git clone --recursive https://github.com/d0k3/GodMode9.git;
        git clone --recursive https://github.com/citra-emu/uncart;
        git clone --recursive https://github.com/Steveice10/bannertool.git;
        git clone --recursive https://github.com/Steveice10/FBI.git;
        git clone --recursive https://github.com/mtheall/ftpd;
        git clone --recursive https://github.com/yellows8/hblauncher_loader.git;

      # Fetch external files
        # Corbenik
          mkdir -p $dep_distfiles/corbenik/firmware; mkdir -p $dep_distfiles/corbenik/keys;
          cd $dep_distfiles/corbenik/firmware;
          wget $url_n3ds_firm; mv $dep_distfiles/corbenik/firmware/000000* $dep_distfiles/corbenik/firmware/native-n3ds;
          wget $url_o3ds_firm; mv $dep_distfiles/corbenik/firmware/000000* $dep_distfiles/corbenik/firmware/native-o3ds;
          wget $url_n3ds_agb; mv $dep_distfiles/corbenik/firmware/000000* $dep_distfiles//corbenik/firmware/agb-n3ds;
          wget $url_o3ds_agb; mv $dep_distfiles/corbenik/firmware/000000* $dep_distfiles//corbenik/firmware/agb-o3ds;
          wget $url_n3ds_twl; mv $dep_distfiles/corbenik/firmware/000000* $dep_distfiles//corbenik/firmware/twl-n3ds;
          wget $url_o3ds_twl; mv $dep_distfiles/corbenik/firmware/000000* $dep_distfiles//corbenik/firmware/twl-o3ds;
          cd $dep_distfiles/corbenik/keys;
          wget $url_n3ds_firm_cetk; mv $dep_distfiles/corbenik/keys/cetk mv $dep_distfiles/corbenik/keys/native.cetk-n3ds;
          wget $url_o3ds_firm_cetk; mv $dep_distfiles/corbenik/keys/cetk mv $dep_distfiles/corbenik/keys/native.cetk-o3ds;
          wget $url_n3ds_agb_cetk; mv $dep_distfiles/corbenik/keys/cetk mv $dep_distfiles/corbenik/keys/agb.cetk-n3ds;
          wget $url_o3ds_agb_cetk; mv $dep_distfiles/corbenik/keys/cetk mv $dep_distfiles/corbenik/keys/agb.cetk-o3ds;
          wget $url_n3ds_twl_cetk; mv $dep_distfiles/corbenik/keys/cetk mv $dep_distfiles/corbenik/keys/twl.cetk-n3ds;
          wget $url_o3ds_twl_cetk; mv $dep_distfiles/corbenik/keys/cetk mv $dep_distfiles/corbenik/keys/twl.cetk-o3ds;

        # Retroarch
          mkdir -p $dep_distfiles/Retroarch; cd $dep_distfiles/Retroarch;
          wget $url_latest_retroarch;

        # Seedbin
          mkdir -p $dep_distfiles/seeddb; cd $dep_distfiles/seeddb;
          wget $url_seeddb;
          mv $dep_distfiles/seeddb/seeddb $dep_distfiles/seeddb/seeddb.bin;

        # freeShop
          mkdir -p $dep_dist/freeShop; cd $dep_dist/freeShop;
          wget $url_freeshop; wget $url_enctitlekeys;
          mv $dep_dist/freeShop/downloadenc $dep_dist/freeShop/encTitleKeys.bin;

      echo "";
      echo "Source files updated!";
  ;;

  2)
    # Clean src
      rm -rf $dir_build $dir_out $dir_src/sdmc*;
      mkdir -p $dir_build $dir_out $dir_3ds $dir_cia;

    # Copy dependencies
      cp -rR $dep_distfiles $dir_build/;
      cp -rR $dep_cia/apps/*.cia $dir_cia/;
      cp -rR $dep_filer $dir_out/;
      mv $dir_build/freeShop $dir_out/;
      mv $dir_out/freeShop/*.cia $dir_cia/;

    # Corbenik
      cd $dir_build/corbenik;
      make clean;
      make full;
      rm -rf $dir_build/corbenik/out/corbenik/locale;
      mv $dir_build/corbenik/out/corbenik $dir_out;
      mv $dir_build/corbenik/out/arm9loaderhax.bin $dir_out;
      mv $dir_build/corbenik/firmware $dir_corbenik/;
      mv $dir_build/corbenik/keys $dir_corbenik/;
      cp $dep_corbenik/*.key $dir_corbenik/keys/;
      mkdir -p $dir_chain;
  
    # ARM9LoaderHax-n3ds
      cd $dir_build/arm9loaderhax;
      make clean;
      sed -i -e 's|"sdmc:/arm9loaderhax.pack"|"sdmc:/3ds/arm9loaderhax-n3ds/arm9loaderhax.pack"|g' $dir_build/arm9loaderhax/payload_installer/installer/source/main.c;
      cp $dep_a9lh/* $dir_build/arm9loaderhax/data_input/;
      mv $dir_build/arm9loaderhax/data_input/otp.bin-n3ds $dir_build/arm9loaderhax/data_input/otp.bin;
      make;
      mv -v $dir_build/arm9loaderhax/data_output $dir_3ds/arm9loaderhax-n3ds;
      mv -v $dir_3ds/arm9loaderhax-n3ds/arm9loaderhax.bin $dir_chain/ARM9LoaderHax-n3ds.bin;
      rm -rf $dir_build/arm9loaderhax; cp -rR $dep_dist/arm9loaderhax $dir_build/;

    # ARM9LoaderHax-o3ds
      cd $dir_build/arm9loaderhax;
      make clean;
      sed -i -e 's|"sdmc:/arm9loaderhax.pack"|"sdmc:/3ds/arm9loaderhax-o3ds/arm9loaderhax.pack"|g' $dir_build/arm9loaderhax/payload_installer/installer/source/main.c;
      cp $dep_a9lh/* $dir_build/arm9loaderhax/data_input/;
      mv $dir_build/arm9loaderhax/data_input/otp.bin-o3ds $dir_build/arm9loaderhax/data_input/otp.bin;
      make;
      mv -v $dir_build/arm9loaderhax/data_output $dir_3ds/arm9loaderhax-o3ds;
      mv -v $dir_3ds/arm9loaderhax-o3ds/arm9loaderhax.bin $dir_chain/ARM9LoaderHax-o3ds.bin;

    # Decrypt9WIP
      cd $dir_build/Decrypt9WIP; mkdir -p $dir_d9game $dir_decrypt9;
      make clean;
      make;
      mv -v $dir_build/Decrypt9WIP/output/Decrypt9WIP.bin $dir_chain/Decrypt9.bin;
      mv $dir_build/Decrypt9WIP/resources/d9logo.bin $dir_decrypt9/;
      cp -rR $dep_decrypt9wip/aeskeydb.bin $dir_decrypt9/;
      cp -rR $dep_decrypt9wip/hs-* $dir_decrypt9/;
      mv $dir_build/seeddb/seeddb.bin $dir_decrypt9/;

    # EmuNAND9
      cd $dir_build/EmuNAND9; mkdir -p $dir_emunand9;
      make clean;
      make;
      mv -v $dir_build/EmuNAND9/output/EmuNAND9.bin $dir_chain/EmuNAND9.bin;

    # GodMode9
      cd $dir_build/GodMode9;
      make clean;
      make;
      mv -v $dir_build/GodMode9/output/GodMode9.bin $dir_chain/GodMode9.bin;

    # Uncart
      cd $dir_build/uncart;
      make clean;
      make a9lh;
      mv -v $dir_build/uncart/uncart_arm9loaderhax.bin $dir_chain/Uncart.bin;

    # bannertool
      cd $dir_build/bannertool;
      make clean;
      make;

    # FBI
      cd $dir_build/FBI;
      make clean;
      cp $dir_build/bannertool/output/bannertool $dir_build/FBI/buildtools/3ds/bannertool-linux64;
      rm $dir_build/FBI/buildtools/3ds/bannertool-linux32;
      make;
      mv -v $dir_build/FBI/output/FBI.cia $dir_cia/fbi-v$(date +%Y%m%d).cia;

    # ftpd
      cd $dir_build/ftpd;
      make clean;
      make;
      mkdir -p $dir_3ds/ftpd;
      mv $dir_build/ftpd/ftpd.3dsx $dir_3ds/ftpd/;
      mv $dir_build/ftpd/ftpd.smdh $dir_3ds/ftpd/;

    # hblauncher_loader
      cd $dir_build/hblauncher_loader;
      make clean;
      sed -i -e 's|"sdmc:/|"sdmc:/3ds/|g' $dir_build/hblauncher_loader/source/hblauncher_loader.c;
      make;
      mv -v $dir_build/hblauncher_loader/hblauncher_loader.cia $dir_cia/hblauncher_loader-v$(date +%Y%m%d).cia;
      cp $dep_misc/hblauncherloader* $dir_3ds/; cp $dep_misc/boot.3dsx $dir_3ds/h.bin;

    # Setup RetroArch 3dsx
      cd $dir_build/Retroarch;
      p7zip -d $dir_build/Retroarch/*;
      mv $dir_build/Retroarch/3ds/catsfc_libretro $dir_3ds/;
      mv $dir_build/Retroarch/3ds/fceumm_libretro $dir_3ds/;
      mv $dir_build/Retroarch/3ds/fb_alpha_cps2_libretro $dir_3ds/;
      mv $dir_build/Retroarch/3ds/fb_alpha_neo_libretro $dir_3ds/;
      mv $dir_build/Retroarch/3ds/pocketsnes_libretro $dir_3ds/;
      cp -rR $dep_retroarch $dir_out/;
      cp -rR $dep_roms $dir_out/;

    # Cleanup
      cd ~/src;
      rm -rf $dir_build; mv -v $dir_out sdmc-v$(date +%Y%m%d);
  ;;

  3)
    # Set SD files to n3ds
      rm -rf 3ds/arm9loaderhax-o3ds;
      rm -rf corbenik/chain/ARM9LoaderHax-o3ds.bin;
      rm corbenik/firmware/native-o3ds;
      rm corbenik/firmware/agb-o3ds;
      rm corbenik/firmware/twl-o3ds;
      rm corbenik/keys/native.cetk-o3ds;
      rm corbenik/keys/agb.cetk-o3ds;
      rm corbenik/keys/twl.cetk-o3ds;
      mv corbenik/firmware/native-n3ds corbenik/firmware/native;
      mv corbenik/firmware/agb-n3ds corbenik/firmware/agb;
      mv corbenik/firmware/twl-n3ds corbenik/firmware/twl;
      mv corbenik/keys/native.cetk-n3ds; corbenik/keys/native.cetk;
      mv corbenik/keys/agb.cetk-n3ds; corbenik/keys/agb.cetk;
      mv corbenik/keys/twl.cetk-n3ds; corbenik/keys/twl.cetk;
  ;;

  4)
    # Set SD files to o3ds
      rm -rf 3ds/arm9loaderhax-n3ds;
      rm -rf corbenik/chain/ARM9LoaderHax-n3ds.bin;
      rm corbenik/firmware/native-n3ds;
      rm corbenik/firmware/agb-n3ds;
      rm corbenik/firmware/twl-n3ds;
      rm corbenik/keys/native.cetk-n3ds;
      rm corbenik/keys/agb.cetk-n3ds;
      rm corbenik/keys/twl.cetk-n3ds;
      mv corbenik/firmware/native-o3ds corbenik/firmware/native;
      mv corbenik/firmware/agb-o3ds corbenik/firmware/agb;
      mv corbenik/firmware/twl-o3ds corbenik/firmware/twl;
      mv corbenik/keys/native.cetk-o3ds; corbenik/keys/native.cetk;
      mv corbenik/keys/agb.cetk-o3ds; corbenik/keys/agb.cetk;
      mv corbenik/keys/twl.cetk-o3ds; corbenik/keys/twl.cetk;
  ;;

  *)
    echo "";
    echo "Invalid choice!";
    exit 1;
  ;;
esac

exit 0;
